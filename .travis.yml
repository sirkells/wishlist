#Request root permissions to the TravisCI runtime environment
sudo: required
#Tell TravisCI that we're using docker to run our tests
services:
  - docker
#Build our test Docker container
before_install:
  - docker build -t wishlist-test -f Dockerfile.test .

#Run our test Docker container
script:
  - docker run wishlist-test yarn test --coverage

deploy:
  provider: elasticbeanstalk
  access_key_id:
    secure: $ACCESS_KEY_ID
  secret_access_key:
    secure: $SECRET_ACCESS_KEY
  region: "us-east-2"
  app: "wishlist"
  env: "Wishlist-env"
  bucket_name: "elasticbeanstalk-us-east-2-275017868740"
# deploy:
#   provider: elasticbeanstalk
#   region: "us-east-2"
#   app: "wishlist"
#   env: "Wishlist-env"
#   bucket_name: "elasticbeanstalk-us-east-2-275017868740"
#   bucket_path: "wishlist"
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY_ID
#   secret_access_key:
#     secure: $AWS_SECRET
# language: node_js
# node_js:
#   - "stable"
# cache:
#   directories:
#     - node_modules #Cache node_modules for faster builds
# script:
#   - yarn test #Runs Tests
#   - yarn build #Creats a production build

# sudo: required
# services:
#   - docker
# env:
#   - DOCKER_COMPOSE_VERSION=1.4.2

# before_install:
#   - sudo rm /usr/local/bin/docker-compose
#   - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#   - chmod +x docker-compose
#   - sudo mv docker-compose /usr/local/bin
# script:
#   - docker-compose up
